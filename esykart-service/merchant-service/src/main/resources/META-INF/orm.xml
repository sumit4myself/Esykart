<?xml version="1.0" encoding="UTF-8" ?>
<entity-mappings xmlns="http://xmlns.jcp.org/xml/ns/persistence/orm"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/persistence/orm http://xmlns.jcp.org/xml/ns/persistence/orm_2_1.xsd"
	version="2.1">

	<named-query name="Merchant.changeStatus">
		<query>UPDATE Merchant m SET m.status=:status WHERE m.id=:merchantId</query>
	</named-query>

	<named-query name="Role.changeStatus">
		<query>UPDATE Role m SET m.status=:status WHERE m.roleId=:roleId</query>
	</named-query>

	<named-query name="User.changeStatus">
		<query>UPDATE User m SET m.status=:status WHERE m.userId=:userId</query>
	</named-query>

	<named-query name="User.authenticate">
		<query>
			SELECT U 
				FROM User U 
					LEFT OUTER JOIN FETCH U.roles R
					LEFT OUTER JOIN FETCH R.permissions P
					WHERE LOWER(U.userName) = LOWER(:userName) AND U.password =:password
		
		</query>
	</named-query>

	<named-query name="User.findMenus">
		<query>
			SELECT DISTINCT L1 
				FROM Menu L1 
					LEFT OUTER JOIN FETCH L1.subMenus L2
					LEFT OUTER JOIN FETCH L1.permissions P1
					LEFT OUTER JOIN FETCH L2.permissions P2
				WHERE 
					L1.parentMenu IS NULL AND (P1 IN ( :permissions) OR P2 IN ( :permissions))
					
		</query>
	</named-query>

</entity-mappings>